<tool id="yolo_predict" name="Perform YOLO image labeling" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@" profile="24.2">
    <description>with ultralytics</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="creator" />
    <expand macro="edam" />
    <expand macro="requirements" />
    <command detect_errors="aggressive">
    <![CDATA[
      export YOLO_CONFIG_DIR='HOME/.config/ultralytics' &&

      mkdir -p ./input_images ./runs ./models ./results && 
      
      #for $filename in $input_images:
          ln -s '$filename' './input_images/${filename.element_identifier}' &&
      #end for

      cp '$class_name' './models/class_name.txt' &&

      cp '$model' './models/model.pt' &&
	    
      python '$__tool_directory__/yolov8.py' 
	    --test_path='./input_images' 
	    --model_path='./models' 
	    --model_name='model' 
	    --run_dir='./runs' 
	    --save_dir='./results'
	    --image_size='$image_size'
	    --mode='$mode'
	    --foldername='overlaid_images'
	    --class_names_file='$class_name'
	    --num_classes=`wc -l < ./models/class_name.txt`
	    --confidence='$confidence'
	    --iou='$iou'
	    --max_det='$max_det' 
	    --headless
    ]]>
    </command>
    <inputs>
        <param name="input_images" type="data" format="jpg,png" multiple="true"  label="Input images"/>
	<param name="class_name" type="data" format="txt" label="YOLO class name file" />
	<param name="model" type="data" format="data" label="Model file" />
	<param name="mode" type="select" label="Prediction mode">
          <option value="segment">segment</option>
          <option value="detect">detect</option>
	</param>
	<param name="image_size" type="integer" value="1000" min="16" label="Image size" help="All input images will be re-sized to squares with sides of this length (in pixels). This value governs the trade-offs of speed (smaller values) vs accuracy (larger values)." />
 	<param name="confidence" type="float" value="0.5" min="0.0" max="1.0" label="Confidence" help="Confidence value (0-1) for each detected bounding box." />
	<param name="iou" type="float" value="0.7" min="0.1" max="1.0" label="IoU" help="Intersection over Union threshold for non-maximum suppression." />
	<param name="max_det" type="integer" value="300" min="100" max="1000" label="Max. number of detections" help="Maximum number of detections allowed per image. Limits the total number of objects the model can detect in a single inference, preventing excessive outputs in dense scenes." />
    </inputs>
    <outputs>
        <collection name="txt_results" format="txt" type="list" label="YOLO bounding box and annotation (text)">
            <discover_datasets pattern="(?P&lt;name&gt;.*)\.txt$" directory="results" visible="true"/>
        </collection>
        <collection name="mask_results" format="tiff" type="list" label="YOLO segmentation masks (TIFF)">
            <discover_datasets pattern="(?P&lt;name&gt;.*)_mask\.tiff$" directory="results" visible="true"/>
        </collection>
        <collection name="overlay_results" format="jpg" type="list" label="YOLO annotated overlay images">
            <discover_datasets pattern="(?P&lt;name&gt;.*)\.jpg$" directory="runs/overlaid_images" visible="true"/>
        </collection>
    </outputs>
    <tests>
        <!-- Update or create relevant tests for the three output types if needed -->
    </tests>
    <help><![CDATA[
        **What it does**
        This tool performs predictions on input images using a YOLO-compatible model. It supports two modes of operation: segment and detect.
        
	**Outputs:**

	 - **Bounding Box and Polygon Coordinates** (`.txt`)
           - One plain text file per image with polygon points, class ID, and confidence.

	 - **Segmentation Mask** (`.tiff`)
           - One grayscale TIFF file per image showing mask areas.

         - **Overlay Images** (`_overlay.jpg`)
           - One JPEG per image showing segmentation masks over the original image with fixed class coloring.

    ]]>
    </help>
    <expand macro="citations" />
</tool>
